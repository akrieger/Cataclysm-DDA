name: ObjectCreator Windows build

on:
  push:
    branches:
    - master
    - 0.F-dev
    paths-ignore:
    - 'android/**'
    - 'build-data/osx/**'
    - 'doc/**'
    - 'doxygen_doc/**'
    - 'lgtm/**'
    - 'tools/**'
    - 'utilities/**'
  pull_request:
    branches:
    - master
    - 0.F-dev
    paths-ignore:
    - 'android/**'
    - 'build-data/osx/**'
    - 'doc/**'
    - 'doxygen_doc/**'
    - 'lgtm/**'
    - 'tools/**'
    - 'utilities/**'

jobs:
  build_object_creator:
    name: Build
    runs-on: windows-2019

    steps:
    - name: checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    # We have to use at least this version of vcpkg to include fixes for yasm-tool's
    # availability only as an x86 host tool. Keep it in sync with the builtin-baseline
    # field in vcpkg.json. Caching happens as a post-action which runs at the end of
    # the whole workflow, after vcpkg install happens during msbuild run.
    - name: Restore artifacts, or run vcpkg, build and cache artifacts
      uses: lukka/run-vcpkg@main
      id: runvcpkg
      with:
        additionalCachedPaths: '${{ runner.workspace }}/Cataclysm-DDA/msvc-full-features/vcpkg_installed;${{ runner.workspace }}/Cataclysm-DDA/msvc-object_creator/vcpkg_installed'
        setupOnly: true
        vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
        vcpkgGitCommitId: '49b67d9cb856424ff69f10e7721aec5299624268'

    # There's not enough disk space to build both release and debug versions of
    # our dependencies, so we hack the triplet file to build only release
    # versions
    # TODO overlay triplets?
    - name: Disable debug builds for vcpkg
      run: |
        Get-ChildItem "${{ runner.workspace }}/b/vcpkg/triplets" -File |
        Foreach-Object {
          Add-Content $_.FullName "set(VCPKG_BUILD_TYPE release)`n"
        }

    - name: Integrate vcpkg
      run: |
        vcpkg integrate install

    - name: Dump vcpkg logs if vcpkg build failed
      if: failure()
      run: |
        Get-ChildItem "${{ runner.workspace }}/b/vcpkg/buildtrees" |
        Foreach-Object {
            Get-ChildItem $_.FullName -Filter *.log |
            Foreach-Object {
              echo =================================================
              echo $_.FullName
              echo =================================================
              type $_.FullName
            }
        }

    - name: Check for yasm
      run: |
        echo =================================================
        Get-ChildItem "${{ runner.workspace }}/Cataclysm-DDA/msvc-full-features/vcpkg_installed"
        echo =================================================

    - name: Build
      run: |
          cd msvc-object_creator
          msbuild -m -p:Configuration=Release -p:Platform=x64 ObjectCreator-vcpkg-static.sln

    - name: Dump vcpkg logs if vcpkg build failed
      if: failure()
      run: |
        echo =================================================
        Get-ChildItem "${{ runner.workspace }}/Cataclysm-DDA/msvc-full-features/vcpkg_installed" -Recurse
        echo =================================================
        echo "${{ runner.workspace }}/Cataclysm-DDA/msvc-full-features/vcpkg_installed/x64-windows-static/share/yasm-tool-helper/yasm-tool-helper.cmake"
        echo =================================================
        type "${{ runner.workspace }}/Cataclysm-DDA/msvc-full-features/vcpkg_installed/x64-windows-static/share/yasm-tool-helper/yasm-tool-helper.cmake"
        Get-ChildItem "${{ runner.workspace }}/b/vcpkg/buildtrees" |
        Foreach-Object {
            Get-ChildItem $_.FullName -Filter *.log |
            Foreach-Object {
              echo =================================================
              echo $_.FullName
              echo =================================================
              type $_.FullName
            }
        }
